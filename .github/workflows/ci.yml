name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    name: Pre-commit hooks
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit detect-secrets ansible-lint

      - name: Cache pre-commit hooks
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit hooks
        run: pre-commit run --all-files

  ansible-syntax:
    runs-on: ubuntu-latest
    name: Ansible syntax check
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Run ansible-playbook syntax check
        run: |
          ansible-playbook --syntax-check playbook.yml

  secret-scan:
    runs-on: ubuntu-latest
    name: Secret scanning
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install detect-secrets
        run: |
          python -m pip install --upgrade pip
          pip install detect-secrets

      - name: Run secret scan
        run: |
          # Verify no new secrets have been added
          detect-secrets scan --baseline .secrets.baseline --force-use-all-plugins

          # Audit the baseline to ensure no real secrets are present
          detect-secrets audit .secrets.baseline --report --fail-on-unaudited-potential-secret

  lint-shell:
    runs-on: ubuntu-latest
    name: Shell script linting
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Run shellcheck
        run: |
          find . -name "*.sh" -type f | xargs shellcheck -e SC1091

  lint-ansible:
    runs-on: ubuntu-latest
    name: Ansible linting
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install ansible-lint
        run: |
          python -m pip install --upgrade pip
          pip install ansible-lint ansible

      - name: Run ansible-lint
        run: |
          ansible-lint --parseable-severity playbook.yml roles/

  validate-yaml:
    runs-on: ubuntu-latest
    name: YAML validation
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install PyYAML
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML

      - name: Validate YAML files
        run: |
          find . -name "*.yml" -o -name "*.yaml" | while read -r file; do
            echo "Validating $file"
            python -c "import yaml; yaml.safe_load(open('$file', 'r'))"
          done

  molecule-test:
    runs-on: ubuntu-latest
    name: Molecule testing
    strategy:
      matrix:
        scenario:
          - default
          - checksum-enforcement
          - idempotency
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Install Ansible Galaxy requirements
        run: |
          ansible-galaxy install -r requirements.yml

      - name: Cache Molecule dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/molecule
          key: molecule-${{ matrix.scenario }}-${{ hashFiles('roles/sysinit/molecule/*/molecule.yml') }}

      - name: Run Molecule tests
        run: |
          cd roles/sysinit
          molecule test -s ${{ matrix.scenario }}
        env:
          MOLECULE_NO_LOG: false
          PY_COLORS: 1
          ANSIBLE_FORCE_COLOR: 1
