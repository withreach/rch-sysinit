---
- name: Postman - Set postman path
  ansible.builtin.set_fact:
    postman_install_path: "/home/{{ lookup('env', 'USER') }}/.local"

- name: Postman - Set postman binary
  ansible.builtin.set_fact:
    postman_bin: "/home/{{ lookup('env', 'USER') }}/.local/bin/postman"

- name: Postman - Check if postman exists
  ansible.builtin.stat:
    path: "{{ postman_install_path }}/Postman"
  register: postman_exists_result

- name: Postman - Extract postman unarchive
  ansible.builtin.unarchive:
    src: https://dl.pstmn.io/download/latest/linux64
    dest: "{{ postman_install_path }}"
    creates: "{{ postman_install_path }}/Postman"
    remote_src: true
  when: not postman_exists_result.stat.exists or upgrade | default(false)

- name: Postman - Create available binary on path
  ansible.builtin.file:
    src: "{{ postman_install_path }}/Postman/Postman"
    dest: "{{ postman_bin }}"
    state: link

- name: Postman - Add execute permission to Postman binary
  ansible.builtin.file:
    path: "{{ postman_bin }}"
    mode: u+x

- name: Postman - Create desktop entry
  ansible.builtin.copy:
    content: |
      [Desktop Entry]
      Version=1.0
      Type=Application
      Name=Postman
      Comment=API Development Environment
      Exec="/home/{{ lookup('env', 'USER') }}/.local/bin/postman"
      Icon="/home/{{ lookup('env', 'USER') }}/.local/bin/postman/app/resources/app/assets/icon.png"
      Terminal=false
      Categories=Development;WebDevelopment;
      StartupWMClass=Postman
      MimeType=x-scheme-handler/postman;
    dest: /usr/share/applications/postman.desktop
    mode: '0644'
  # when: not postman_exists_result.stat.exists

- name: Postman - Update desktop database
  ansible.builtin.command:
    cmd: update-desktop-database /usr/share/applications
  # when: not postman_exists_result.stat.exists
  changed_when: false
